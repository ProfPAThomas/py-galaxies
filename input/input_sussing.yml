# L-Galaxies input file
#=======================

# Note that this is not robust to repeated entries (subheadings, or in the case of io_files, subsubheadings) under different headings: I should probably rewrite the code to make it so, but that would be a pain as variable names would get very long.

# Compulsory parameters: presence may be relied upon
#---------------------------------------------------

io_files:
 input_files:
  graph_file:   'MergerGraphs/mega_graph_mini_09-11.hdf5'
  snap_file:    'MergerGraphs/snaplist.txt' # Should ideally be stored in graph_file
 output_files:
  halo_file:    'output/python_HaloOutput.hdf5'
  subhalo_file: 'output/python_SubhaloOutput.hdf5'
  galaxy_file:  'output/python_GalaxyOutput.hdf5'
  profile_cpu_file: 'output/test_profile_cpu.pkl'
  profile_mem_file: 'output/python_gc__profile_mem.pkl'
 auxiliary_files:
  cooling_function_file: 'aux_files/Lambda_table.npz'
  
# Diagnostics
diagnostics:
 b_debug:
  Description: 'Print out debugging diagnostics'
  Value: False
 b_display_parameters:
  Description: 'Display runtime parameters after reading in'
  Value: True
 b_profile_cpu:
  Description: 'Profile cpu-time'
  Value: False
 b_profile_mem:
  Description: 'Profile memory'
  Value: True
 verbosity:
  Description: 'Level of diagnostic messages: 0 - None; 1/2 - main counters; 3/4/5 - debugging info'
  Value: 2

# Should be attributes in the graph input file
cosmology:
 omega_m:        
  Description: 'Matter density parameter'
  Value:        0.30
  Units:       'None'
 H0:
  Description: 'Hubble parameter at z=0'
  Value:        70.
  Units:       'u.km/(u.s*u.Mpc)'
 baryon_fraction:
  Description: 'Baryon fraction'
  Value:        0.155
  Units:       'None'
  
halo_model:
 halo_type:
  Description: 'Spherical overdensity (SO) or MEGA'
  Value:       'MEGA'
 halo_overdensity:  
  Description: 'Halo overdensity relative to the critical density (not relevant for MEGA)'
  Value:        200

performance:
 n_HDF5_io_rec:
  Description: 'Size of HDF5 io buffer (number of records)'
  Value:        1000

# Units expressed in terms that astropy understands
# The internal units are self-consistent in that, e.g., speed_unit=length_unit/time_unit.
# This is to keep the equations simple and avoid missing conversion factors.
# Also, although units are specified, within the code, quantities are stored as values only, for efficiency:
# I am unsure as to whether using units within numpy will slow things down, so possibly this could be relaxed.
units:
 input:    # Units of input data should be attributes of the graph file
  length:
   Description: 'Length unit in graph input data (used for positions)'
   Value:        1.43
   Units:       'u.Mpc'
  mass:
   Description: 'Mass unit in graph input data'
   Value:        1
   Units:       'c.M_sun'  # Should there be a factor of h^{-1}?
  speed:
   Description: 'Speed unit in graph input data'
   Value:        1
   Units:       'u.km/u.s'
  time:
   Description: 'Time unit used in input files'
   Value:        1
   Units:       'u.yr' 
  temperature:
   Description: 'Temperature unit used in input files'
   Value:        1
   Units:       'u.K' 
 internal: # Units chosen to be of order unity for typical galaxy, but rounded to closest factor of 1000.
  length:
   Description: 'Length unit used internally in the code'
   Value:        1
   Units:       'u.kpc'
  mass:
   Description: 'Mass unit used internally in the code'
   Value:        !!float 1e10
   Units:       'c.M_sun'
  temperature:
   Description: 'Temperature unit used internally in the code'
   Value:        !!float 1e6
   Units:       'u.K'  
  time:
   Description: 'Time unit used internally in the code'
   Value:        !!float 1e9
   Units:       'u.yr' 
 output:   # Units expressed in simplest astrophysical equivalent
  length:
   Description: 'Length unit used in output files'
   Value:        1
   Units:       'u.kpc'
  mass:
   Description: 'Mass unit used in output files'
   Value:        1
   Units:       'c.M_sun'
  speed:
   Description: 'Speed unit used in output files'
   Value:        1
   Units:       'u.km/u.s'
  temperature:
   Description: 'Temperature unit used in output files'
   Value:        1
   Units:       'u.K'  
  time:
   Description: 'Time unit used in output files'
   Value:        1
   Units:       'u.yr' 
  
# Optional parameters: test for their existence before use
#---------------------------------------------------------

model_switches:
 b_HOD:
  Description: 'Halo occupation description for stars (as primitive test)'
  Value:        False
 b_lgalaxies:
  Description: 'Mimic L-galaxies base model as closely as possible'
  Value:        True
 b_halo_angmom:
  Description: 'Do the halo catalogues contain angular momentum?'
  Value:        False
  
model_parameters:
 timestep_halo:
  Description: 'Minimum timestep size for halo/subhalo operations'
  Value:        !!float 1e8
  Units:       'u.yr'
 timestep_galaxies:
  Description: 'Minimum timestep size for galaxy operations'
  Value:        !!float 1e7
  Units:       'u.yr'
 mass_minimum:
  Description: 'The minimum mass that is considered larger than 0.'
  Value:        1.
  Units:       'c.M_sun'
 length_minimum:
  Description: 'The minimum length that is considered larger than 0.'
  Value:        !!float 1e-5
  Units:       'u.pc'
  
astrophysics:
# mu m_H and mu_ratio are really functions of metallicity.  However, that would mean that we had to keep track
# of energy rather than temperature in the hot gas, and make the cooling rate constant vary halo by halo,
# introducing an extra calculation every time.
# In practice they are very slow functions of metallicity, so we just use a fixed value.
 mumH:
  Description: 'Mass per particle in the hot gas'
  Value:        !!float 1e-27
  Units:       'u.kg'
 lambda_ratio:
  Description: 'n_e n_i / n_t^2 - for use with the cooling function Lambda'
  Value:        0.25
  Units:       'None'
 base_metallicity:
  Description: 'Metallicity of gas accreted onto halos; needs to be greater than minimum  value in cooling tables'
  Value:        !!float 1e-4
  Units:       'None'
 cooling_model:
  Description: 'Choice of cooling model for hot gas'
  Value:       'SIS'   # As in L-galaxies base model and many other SAMs
  Units:       'None'
 major_merger_fraction:
  Description: 'Mass ratio to trigger major mergers'
  Value:        0.3
  Units:       'None'
 merger_f_burst:
  Description: 'Normalisation of burst fraction in major mergers'
  Value:        0.60
  Units:       'None'
 merger_beta_burst:
  Description: 'Power law index in burst fraction formulae for major mergers'
  Value:        1.9
  Units:       'None'
 BH_f_q:
  Description: 'Normalisation of BH growth in major mergers, Hen15, S23'
  Value:        0.041
  Units:       'None'
 BH_v_q:
  Description: 'BH growth in merger (ie virial speed cutoff), Hen15, S23'
  Value:        750
  Units:       'u.km/u.s'
 BH_f_r:
  Description: 'Normalisation of BH growth rate from hot gas, Hen15, S24'
  Value:        !!float 5.3e-3
  Units:       'c.M_sun/u.yr'
 halo_angular_momentum:
  Description: 'Specific angular momentum of halos if not explicit in catalogues = collapse factor; only used if !b_halo_angmom'
  Value:        0.25   # I have 0.06 in my head, but that gives disc radii that are far too small
  Units:       'None'
 sfr_model:
  Description: 'The star formation model'
  Value:       'Unresolved'  # Unresolved, Resolved_cold, Resolved_H2
  Units:       'None'
 sfr_efficiency:
  Description: 'Star formation efficiency, alpha_{SFR}'
  Value:        0.025  # Hen15 value of 0.025 seems to give far too much star formation
  Units:       'None'
 sfr_Mcrit0:
  Description: 'Star formation M_{crit0}, from Hen15 star formation model'
  Value:        !!float 2.4e9
  Units:       'c.M_sun'
 sfr_recycle_fraction:
  Description: 'Fraction of mass of stars formed that is returned if instantaneous recycling'
  Value:        0.43
  Units:       'None'  
 snr_model:
  Description: 'The SNR feedback formation model'
  Value:       'Hen15'  # Hen15, ...
  Units:       'None' 
 Hen15_v_snr:
  Description: 'Sets reheating energy from SNR; Hen15 S17'
  Value:        630
  Units:       'u.km/u.s'
 Hen15_eta:
  Description: 'Reheating efficiency; Hen15 S17'
  Value:        0.62
  Units:       'None'
 Hen15_v_eject:
  Description: 'Reheating SN ejection scale (ie virial speed cutoff); Hen15 S17'
  Value:        100.
  Units:       'u.km/u.s'
 Hen15_beta2:
  Description: 'Reheating SN ejection slope; Hen15 S17'
  Value:        0.80
  Units:       'None'
 Hen15_epsilon:
  Description: 'Mass-loading efficiency; Hen15 S19'
  Value:        2.6
  Units:       'None'
 Hen15_v_reheat:
  Description: 'Reheating mass loading scale (ie virial speed cutoff); Hen15 S19'
  Value:        480.
  Units:       'u.km/u.s'
 Hen15_beta1:
  Description: 'Reheating mass loading slope; Hen15 S19'
  Value:        0.72
  Units:       'None'
 Hen15_gamma_reinc:
  Description: 'Controls the rate of reincorporation of gas'
  Value:        !!float 3e10
  Units:       'u.yr'
 sfr_yield:
  Description: 'Yield of metals per unit mass of stars formed (before recycling)'
  Value:        0.046
  Units:       'None'
  
